"Student_Name";"Test_Case_1 (10)";"Test_Case_2 (10)";"Test_Case_3 (10)";"Test_Case_4 (10)";"Code_1 (10)";"Code_2 (10)";"Code_3 (20)";"Code_4 (20)";"Total_Marks (100)";"Comments"
22AE10002;10;10;10;10;10;10;20;20;100;Nice work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22AE10022;10;10;10;10;10;10;20;20;100;Keep it up~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22AE10042;10;10;10;10;10;10;20;20;100;Good work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22AE30015;0;0;0;0;10;0;5;0;15;needs more practice~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~[ERROR: SEGMENTATION_FAULT or RUNTIMEOUT.~~It may be due one of the following:~~+ Waits for more user input than expected/defined in the question or~~+ Code throws a math exception during runtime or~~+ Runs into an infinite loop or~~or something else completely, we will never know...~~]~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~[ERROR: SEGMENTATION_FAULT or RUNTIMEOUT.~~It may be due one of the following:~~+ Waits for more user input than expected/defined in the question or~~+ Code throws a math exception during runtime or~~+ Runs into an infinite loop or~~or something else completely, we will never know...~~]~~~~FAILED: Test Case 3: ~~INPUT:0~~Desired Output:~~~~0 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~[ERROR: SEGMENTATION_FAULT or RUNTIMEOUT.~~It may be due one of the following:~~+ Waits for more user input than expected/defined in the question or~~+ Code throws a math exception during runtime or~~+ Runs into an infinite loop or~~or something else completely, we will never know...~~]~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~[ERROR: SEGMENTATION_FAULT or RUNTIMEOUT.~~It may be due one of the following:~~+ Waits for more user input than expected/defined in the question or~~+ Code throws a math exception during runtime or~~+ Runs into an infinite loop or~~or something else completely, we will never know...~~]~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~FAILED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 0 out of 10~~~~~~FAILED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 5 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 0 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 15/100 ##########
22AG10009;10;10;10;10;10;10;20;15;95;needs more practice~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 15 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 95/100 ##########
22AG10029;10;10;10;10;10;10;20;20;100;Perfect~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22AG10049;10;10;10;10;10;10;20;20;100;Good work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22AG30016;10;10;10;10;10;10;20;20;100;Clean Code~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22AG30036;5;10;10;5;10;10;20;10;80;Perfect number detection is incorrect~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 5 out of 10~~~~~~Your output:~~5-random number array: 874 749 463 988 35 ~~No perfect number found~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 5 out of 10~~~~~~Your output:~~10-random number array: 135 654 805 509 1001 1000 85 778 979 929 ~~No perfect number found~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 10 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 80/100 ##########
22BT10007;10;10;10;10;10;10;20;20;100;Great Job~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22BT10027;8;10;8;10;10;10;20;20;96;No output given if array does not contain any perfect number~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 8 out of 10~~~~~~Your output:~~5-random number array: 729 784 52 120 710 ~~~~FAILED: Test Case 3: ~~INPUT:0~~Desired Output:~~~~0 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 8 out of 10~~~~~~Your output:~~5-random number array: ~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 96/100 ##########
22BT30010;0;0;10;0;10;10;0;0;30;========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~how many no will you enter5 random no of array1344399213440440197016433600~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~how many no will you enter5 random no of array79389687935416197016433600~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~how many no will you enter10 random no of array8201112819756019701643360001970164336000~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~FAILED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 0 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 0 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 30/100 ##########
22BT30030;5;10;10;5;10;10;20;5;75;Perfect number implementation is incorrect~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 5 out of 10~~~~~~Your output:~~5~~418 its not a perfect number705 its not a perfect number73 its not a perfect number440 its not a perfect number397 its not a perfect number~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 5 out of 10~~~~~~Your output:~~10~~62 its not a perfect number221 its not a perfect number138 its not a perfect number552 its not a perfect number752 its not a perfect number242 its not a perfect number423 its not a perfect number390 its not a perfect number721 its not a perfect number817 its not a perfect number~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 5 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 75/100 ##########
22CE10013;0;0;0;0;10;10;20;20;60;Segmentation Fault~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~[ERROR: SEGMENTATION_FAULT or RUNTIMEOUT.~~It may be due one of the following:~~+ Waits for more user input than expected/defined in the question or~~+ Code throws a math exception during runtime or~~+ Runs into an infinite loop or~~or something else completely, we will never know...~~]~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~[ERROR: SEGMENTATION_FAULT or RUNTIMEOUT.~~It may be due one of the following:~~+ Waits for more user input than expected/defined in the question or~~+ Code throws a math exception during runtime or~~+ Runs into an infinite loop or~~or something else completely, we will never know...~~]~~~~FAILED: Test Case 3: ~~INPUT:0~~Desired Output:~~~~0 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~[ERROR: SEGMENTATION_FAULT or RUNTIMEOUT.~~It may be due one of the following:~~+ Waits for more user input than expected/defined in the question or~~+ Code throws a math exception during runtime or~~+ Runs into an infinite loop or~~or something else completely, we will never know...~~]~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~[ERROR: SEGMENTATION_FAULT or RUNTIMEOUT.~~It may be due one of the following:~~+ Waits for more user input than expected/defined in the question or~~+ Code throws a math exception during runtime or~~+ Runs into an infinite loop or~~or something else completely, we will never know...~~]~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 60/100 ##########
22CE10033;0;0;0;0;10;0;0;20;30;========= TEST CASES =========~~~~~~FAILED: Code didn't compile successfully~~  Mark/s obtained: 0 out of 40~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~FAILED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 0 out of 10~~~~~~FAILED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 0 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 30/100 ##########
22CE10073;0;0;0;0;10;0;0;0;10;========= TEST CASES =========~~~~~~FAILED: Code didn't compile successfully~~  Mark/s obtained: 0 out of 40~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~FAILED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 0 out of 10~~~~~~FAILED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 0 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 0 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 10/100 ##########
22CE30004;10;10;10;10;10;10;20;20;100;Keep up the good work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22CE30024;0;0;0;0;0;0;0;0;0;========= TEST CASES =========~~~~~~FAILED: Code didn't compile successfully~~  Mark/s obtained: 0 out of 40~~~~~~========= CODE CASES =========~~~~~~FAILED: Code Case 1:~~Input taken~~  Mark/s obtained: 0 out of 10~~~~~~FAILED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 0 out of 10~~~~~~FAILED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 0 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 0 out of 20~~~~~~==============================~~~~########## TOTAL MARKS OBTAINED = 0/100 ##########
22CH10012;0;10;10;10;10;10;20;5;75;Perfect number implementation incorrect~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Limit Value = 5-random number array 59 700 637 575 503 No perfect number found~~No perfect number found~~No perfect number found~~No perfect number found~~No perfect number found~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 5 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 75/100 ##########
22CH10032;0;0;0;0;10;10;20;0;40;========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~~~~~FAILED: Test Case 3: ~~INPUT:0~~Desired Output:~~~~0 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 0 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 40/100 ##########
22CH10052;10;10;10;10;10;10;20;20;100;Good~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22CH10072;0;10;10;10;10;10;20;20;90;========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~5- random number array:818  908  451  597  965  ~~ perfect number not found~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 90/100 ##########
22CH30013;5;10;10;10;10;10;20;20;95;If array contain 2 perfect number only one perfect number output is given.~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 5 out of 10~~~~~~Your output:~~256 ,403 ,186 ,49 ,862 ,No perfect number found~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 95/100 ##########
22CH30033;10;10;10;10;10;10;20;20;100;Nice work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22CS10017;10;10;10;10;10;10;20;15;95;========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 15 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 95/100 ##########
22CS10037;5;10;10;10;10;10;20;20;95;If array contain 2 perfect number only one perfect number output is given.~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 5 out of 10~~~~~~Your output:~~5 number array490,69,1635,1246,379,~~ no perfect numbers~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 95/100 ##########
22CS10057;10;10;10;10;10;10;20;20;100;Keep up the good work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22CS10077;0;0;0;0;10;10;20;0;40;========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~5-random number array : 973 201 92 904 840 ~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~5-random number array : 996 904 69 507 506 ~~~~FAILED: Test Case 3: ~~INPUT:0~~Desired Output:~~~~0 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~0-random number array : ~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~10-random number array : 999 884 166 803 821 450 857 31 30 50 ~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 0 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 40/100 ##########
22CS30016;10;10;10;10;10;10;20;20;100;Good work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22CS30036;10;10;10;10;10;10;20;20;100;Good work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22CS30056;10;10;10;10;10;10;20;20;100;Nice work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22CY10036;10;10;10;10;10;10;20;20;100;Keep it up~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22EC10007;10;10;10;10;10;10;20;20;100;Perfect~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22EC10027;0;0;0;0;0;0;0;0;0;Wrong program given~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~give the value of x in degrees : the (0.087156, 0.087156)~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~give the value of x in degrees : the (0.087156, 0.087156)~~~~FAILED: Test Case 3: ~~INPUT:0~~Desired Output:~~~~0 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~give the value of x in degrees : the (0.000000, 0.000000)~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~give the value of x in degrees : the (0.173648, 0.173648)~~~~========= CODE CASES =========~~~~~~FAILED: Code Case 1:~~Input taken~~  Mark/s obtained: 0 out of 10~~~~~~FAILED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 0 out of 10~~~~~~FAILED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 0 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 0 out of 20~~~~~~==============================~~~~########## TOTAL MARKS OBTAINED = 0/100 ##########
22EC10067;0;0;10;0;10;10;20;10;60;========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~5-random number array: 274 938 587 442 0 ~~No perfect number found~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~5-random number array: 979 110 146 113 0 ~~No perfect number found~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~10-random number array: 456 166 800 288 215 816 50 360 942 1150959359 ~~No perfect number found~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 10 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 60/100 ##########
22EC10087;10;10;10;10;10;10;20;20;100;Great Job~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22EC30015;10;10;10;10;10;10;20;20;100;Great Job~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22EC30035;10;10;10;10;10;10;20;20;100;Great Job~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22EC30055;10;10;10;10;10;10;20;20;100;Good~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22EE10016;10;10;10;10;10;10;20;20;100;Good work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22EE10036;5;0;0;0;10;10;20;12;57;========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 5 out of 10~~~~~~Your output:~~Enter the number of integers of which a array is to be formed~~6422361- random number array :~~641~~825~~592~~832~~471~~-----------------------------------------~~-210040~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Enter the number of integers of which a array is to be formed~~6422361- random number array :~~350~~701~~493~~459~~510~~-----------------------------------------~~-210000~~~~FAILED: Test Case 3: ~~INPUT:0~~Desired Output:~~~~0 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Enter the number of integers of which a array is to be formed~~6422356- random number array :~~-----------------------------------------~~-2~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Enter the number of integers of which a array is to be formed~~6422366- random number array :~~627~~811~~620~~456~~513~~903~~150~~860~~326~~291~~-----------------------------------------~~-21004000000~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 12 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 57/100 ##########
22EE10056;10;10;10;5;10;10;20;20;95;========= TEST CASES =========~~~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 5 out of 10~~~~~~Your output:~~How many numbers:10-random numbers are:921 896 763 467 321 861 359 549 810 21 ~~No perfect numbers found~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 95/100 ##########
22EE10076;0;0;0;0;0;0;20;20;40;========= TEST CASES =========~~~~~~FAILED: Code didn't compile successfully~~  Mark/s obtained: 0 out of 40~~~~~~========= CODE CASES =========~~~~~~FAILED: Code Case 1:~~Input taken~~  Mark/s obtained: 0 out of 10~~~~~~FAILED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 0 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 40/100 ##########
22EE30015;0;10;10;10;10;10;20;10;80;Perfect number logic is incorrect~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Enter the length of array you want to create : ~~5 random number array : ~~616 546 975 143 868 ~~No perfect number found~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 10 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 80/100 ##########
22EX10002;10;5;10;10;10;10;20;20;95;If array contain 2 perfect number only one perfect number output is given.~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 5 out of 10~~~~~~Your output:~~5-random number array:35 1087 598 1057 414 ~~No perfect number found~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 95/100 ##########
22EX10022;0;0;10;0;10;10;20;15;65;No output after give input~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~[ERROR: SEGMENTATION_FAULT or RUNTIMEOUT.~~It may be due one of the following:~~+ Waits for more user input than expected/defined in the question or~~+ Code throws a math exception during runtime or~~+ Runs into an infinite loop or~~or something else completely, we will never know...~~]~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~[ERROR: SEGMENTATION_FAULT or RUNTIMEOUT.~~It may be due one of the following:~~+ Waits for more user input than expected/defined in the question or~~+ Code throws a math exception during runtime or~~+ Runs into an infinite loop or~~or something else completely, we will never know...~~]~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~[ERROR: SEGMENTATION_FAULT or RUNTIMEOUT.~~It may be due one of the following:~~+ Waits for more user input than expected/defined in the question or~~+ Code throws a math exception during runtime or~~+ Runs into an infinite loop or~~or something else completely, we will never know...~~]~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 15 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 65/100 ##########
22EX10042;10;10;10;10;10;10;20;20;100;Keep it up~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22GG10032;10;10;10;10;10;10;20;20;100;Keep up the good work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22GG10052;10;10;10;10;10;10;20;20;100;Clean Code~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22HS10018;0;0;0;0;10;5;20;10;45;Segment fault, Perfect number implementation (sum) is incorrect~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~[ERROR: SEGMENTATION_FAULT or RUNTIMEOUT.~~It may be due one of the following:~~+ Waits for more user input than expected/defined in the question or~~+ Code throws a math exception during runtime or~~+ Runs into an infinite loop or~~or something else completely, we will never know...~~]~~~~FAILED: Test Case 3: ~~INPUT:0~~Desired Output:~~~~0 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~[ERROR: SEGMENTATION_FAULT or RUNTIMEOUT.~~It may be due one of the following:~~+ Waits for more user input than expected/defined in the question or~~+ Code throws a math exception during runtime or~~+ Runs into an infinite loop or~~or something else completely, we will never know...~~]~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~[ERROR: SEGMENTATION_FAULT or RUNTIMEOUT.~~It may be due one of the following:~~+ Waits for more user input than expected/defined in the question or~~+ Code throws a math exception during runtime or~~+ Runs into an infinite loop or~~or something else completely, we will never know...~~]~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~FAILED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 5 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 10 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 45/100 ##########
22HS10038;5;10;10;10;10;10;20;10;85;Perfect number implementation (sum) is incorrect~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 5 out of 10~~~~~~Your output:~~5 random number array: ~~255 183 487 452 737 ~~0NO perfect number found~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 10 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 85/100 ##########
22HS10058;10;10;10;10;10;10;20;20;100;Good~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22IE10015;10;5;10;10;10;10;20;10;85;If array contain 2 perfect number only one perfect number output is given.~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 5 out of 10~~~~~~Your output:~~Enter the value of n:434	522	976	446	982	No perfect number found~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 10 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 85/100 ##########
22IE10035;10;10;10;10;10;10;20;20;100;Great Job~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22IM10009;10;10;10;10;10;10;20;20;100;Good work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22IM10028;10;10;10;10;10;10;20;20;100;Perfect~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22IM30022;0;0;0;0;10;10;20;20;60;========= TEST CASES =========~~~~~~FAILED: Code didn't compile successfully~~  Mark/s obtained: 0 out of 40~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 60/100 ##########
22MA10010;0;0;10;0;10;10;20;0;50;Perfect number implementation is incorrect~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~enter the number of elements for array:4201145 is perfect number ~~4201589 is perfect number ~~4201444 is perfect number ~~4201630 is perfect number ~~4201292 is perfect number ~~~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~enter the number of elements for array:4201145 is perfect number ~~4201589 is perfect number ~~4201444 is perfect number ~~4201630 is perfect number ~~4201292 is perfect number ~~~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~enter the number of elements for array:4201145 is perfect number ~~4201589 is perfect number ~~4201444 is perfect number ~~4201630 is perfect number ~~4201292 is perfect number ~~4201843 is perfect number ~~4201593 is perfect number ~~4201491 is perfect number ~~4202092 is perfect number ~~4201592 is perfect number ~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 0 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 50/100 ##########
22MA10029;0;0;0;0;10;0;0;0;10;========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Enter the value of x :~~0.087156,0.087156~~Difference in time = 0.000000~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Enter the value of x :~~0.087156,0.087156~~Difference in time = 0.000000~~~~FAILED: Test Case 3: ~~INPUT:0~~Desired Output:~~~~0 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Enter the value of x :~~0.000000,0.000000~~Difference in time = 0.000000~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Enter the value of x :~~0.173648,0.173648~~Difference in time = 0.000000~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~FAILED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 0 out of 10~~~~~~FAILED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 0 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 0 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 10/100 ##########
22MA10048;10;10;10;10;10;10;20;20;100;Keep it up~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22MA10067;10;10;10;10;10;10;20;20;100;Good~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22ME10015;10;10;10;10;10;10;20;20;100;Great Job~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22ME10034;5;10;10;10;10;10;20;20;95;If array contain 2 perfect number only one perfect number output is given.~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 5 out of 10~~~~~~Your output:~~Enter limit: ~~5-random number array: 387 541 383 156 714 ~~No perfect number found~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 95/100 ##########
22ME10053;10;10;10;10;10;10;20;20;100;Keep it up~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22ME10072;10;10;10;10;10;10;20;20;100;Keep it up~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22ME10091;10;10;10;10;10;10;20;20;100;Keep up the good work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22ME30012;10;10;10;10;10;10;20;20;100;Clean Code~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22ME30031;10;10;10;10;10;10;20;20;100;Nice work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22ME30050;10;10;10;10;10;10;20;20;100;Good work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22ME30069;10;10;10;10;10;10;20;20;100;Nice work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22MF10015;10;10;0;10;10;10;20;20;90;If array contain perfect number then segment fault occur.~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 3: ~~INPUT:0~~Desired Output:~~~~0 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~random number arrayrandom number are : perfect number are 0~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 90/100 ##########
22MF10034;5;10;10;10;10;10;20;15;90;Perfect number implementation (sum) is incorrect~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 5 out of 10~~~~~~Your output:~~enter how many numbers ,~~350 37 846 519 853 350 not perfect number ~~37 not perfect number ~~846 not perfect number ~~519 not perfect number ~~853 not perfect number ~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 15 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 90/100 ##########
22MF3IM06;10;10;10;10;10;10;20;20;100;Good~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22MI10002;10;10;10;10;10;10;20;20;100;Keep up the good work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22MI10040;10;10;10;10;10;10;20;20;100;Keep it up~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22MI10059;10;10;10;10;10;10;20;10;90;Perfect number implementation (sum) is incorrect~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 10 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 90/100 ##########
22MI31014;0;0;0;0;10;10;20;15;55;Perfect number implementation (sum) is incorrect~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~[ERROR: SEGMENTATION_FAULT or RUNTIMEOUT.~~It may be due one of the following:~~+ Waits for more user input than expected/defined in the question or~~+ Code throws a math exception during runtime or~~+ Runs into an infinite loop or~~or something else completely, we will never know...~~]~~~~FAILED: Test Case 3: ~~INPUT:0~~Desired Output:~~~~0 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~0 random number array :~~~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~[ERROR: SEGMENTATION_FAULT or RUNTIMEOUT.~~It may be due one of the following:~~+ Waits for more user input than expected/defined in the question or~~+ Code throws a math exception during runtime or~~+ Runs into an infinite loop or~~or something else completely, we will never know...~~]~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 15 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 55/100 ##########
22MI33002;0;0;0;0;10;10;20;15;55;Perfect number implementation (sum) is incorrect~~~~========= TEST CASES =========~~~~~~FAILED: Code didn't compile successfully~~  Mark/s obtained: 0 out of 40~~~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 15 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 55/100 ##########
22MI33021;0;0;0;0;0;0;0;0;0;Did Nothing~~~~========= TEST CASES =========~~~~~~FAILED: Code didn't compile successfully~~  Mark/s obtained: 0 out of 40~~~~~~========= CODE CASES =========~~~~~~FAILED: Code Case 1:~~Input taken~~  Mark/s obtained: 0 out of 10~~~~~~FAILED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 0 out of 10~~~~~~FAILED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 0 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 0 out of 20~~~~~~==============================~~~~########## TOTAL MARKS OBTAINED = 0/100 ##########
22MT10012;10;10;10;10;10;10;20;20;100;Keep up the good work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22MT10050;10;10;10;10;10;10;20;20;100;Nice work~~~~========= TEST CASES =========~~~~PASSED: All test cases - Marks : 40 out of 40~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 20 out of 20~~~~~~PASSED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 20 out of 20~~~~PASSED: All code cases - Marks : 60 out of 60~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 100/100 #########
22MT30005;0;0;0;0;10;10;15;0;35;Random number stored but changed by taking input the array.~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Enter the size of array : 5-random number array: 538 36 117 524 899    538    36   117   524   899121234131241~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Enter the size of array : 5-random number array: 825 392 300 176 78    825   392   300   176    78131241234124123~~~~FAILED: Test Case 3: ~~INPUT:0~~Desired Output:~~~~0 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Enter the size of array : 5-random number array: ~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Enter the size of array : 5-random number array: 828 372 396 471 392 53 113 544 302 772    828   372   396   471   392    53   113   544   302   77212346912346123469131247811124812124~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~FAILED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 15 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 0 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 35/100 ##########
22MT30024;0;0;0;0;10;10;10;5;35;Random number not stored~~~~========= TEST CASES =========~~~~~~FAILED: Test Case 1: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Enter the size of n5~~80,800,681,338,183, 12854168  12850616  1970164336       0       0 12412412412341234~~~~FAILED: Test Case 2: ~~INPUT:5~~Desired Output:~~~~5 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Enter the size of n5~~184,301,279,932,569, 9118616  9115064  1970164336       0       0 12412412412341234~~~~FAILED: Test Case 3: ~~INPUT:0~~Desired Output:~~~~0 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Enter the size of n0~~~~~~FAILED: Test Case 4: ~~INPUT:10~~Desired Output:~~~~10 Random Number: <Random numbers>~~<The perfect numbers> ~~  Mark/s obtained: 0 out of 10~~~~~~Your output:~~Enter the size of n10~~191,798,239,291,430,168,915,296,81,464, 11019160  11015608  1970164336       0       0       0  1970164336       0       0       0 1245812481247812345678912345678912345678912478123456789123456789123456789~~~~========= CODE CASES =========~~~~~~PASSED: Code Case 1:~~Input taken~~  Mark/s obtained: 10 out of 10~~~~~~PASSED: Code Case 2:~~Dynamically allocated array~~  Mark/s obtained: 10 out of 10~~~~~~FAILED: Code Case 3:~~Random numbers generated and stored~~  Mark/s obtained: 10 out of 20~~~~~~FAILED: Code Case 4:~~Checked for perfect number~~  Mark/s obtained: 5 out of 20~~~~~~==============================~~~~######### TOTAL MARKS OBTAINED = 35/100 ##########
